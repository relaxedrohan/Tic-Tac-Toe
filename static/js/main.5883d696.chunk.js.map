{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","slice","length","calculateWinner","setState","concat","step","status","current","winner","moves","map","move","desc","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"gOAIA,SAASA,EAAOC,GACV,OACE,wBACIC,UAAU,SACVC,QAAUF,EAAME,QAFpB,SAIGF,EAAMG,Q,IAMTC,E,kKAIJ,SAAaC,GAAI,IAAD,OACd,OAAQ,cAACN,EAAD,CACEI,MAAOG,KAAKN,MAAMO,QAAQF,GAC1BH,QAAY,kBAAK,EAAKF,MAAME,QAAQG,Q,oBAIhD,WAEE,OACE,gCACE,sBAAKJ,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKP,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKP,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,a,GA5BTC,IAAMC,WAmCpBC,E,kDACJ,WAAYX,GAAO,IAAD,8BACd,cAAMA,IACDY,MAAQ,CACTC,QAAU,CAAC,CACPN,QAAUO,MAAM,GAAGC,KAAK,QAE5BC,WAAa,EACbC,SAAU,GAPA,E,+CAWlB,SAAYZ,GACR,IAAMQ,EAAUP,KAAKM,MAAMC,QAAQK,MAAM,EAAGZ,KAAKM,MAAMI,WAAW,GAE5DT,EADUM,EAAQA,EAAQM,OAAO,GACfZ,QAAQW,QAC7BE,EAAgBb,IAAWA,EAAQF,KAGtCE,EAAQF,GAAKC,KAAKM,MAAMK,QAAS,IAAM,IACvCX,KAAKe,SAAS,CACVR,QAAUA,EAAQS,OAAO,CAAC,CACtBf,QAAQA,KAEZS,WAAaH,EAAQM,OACrBF,SAAWX,KAAKM,MAAMK,a,oBAI9B,SAAOM,GACHjB,KAAKe,SAAS,CACVL,WAAaO,EACbN,QAAYM,EAAO,IAAK,M,oBAIhC,WAAU,IAmBFC,EAnBC,OAECX,EAAUP,KAAKM,MAAMC,QACrBY,EAAUZ,EAAQP,KAAKM,MAAMI,YAC7BU,EAASN,EAAgBK,EAAQlB,SAEjCoB,EAAQd,EAAQe,KAAI,SAACL,EAAMM,GAC7B,IAAMC,EAAOD,EACb,eAAiBA,EACjB,mBAEA,OACI,6BACI,wBAAQ3B,QAAS,kBAAK,EAAK6B,OAAOF,IAAlC,SAA2CC,KADtCD,MAgBnB,OAPML,EADDE,EACU,UAAYA,EAEZ,gBAAkBpB,KAAKM,MAAMK,QAAS,IAAM,KAMzD,sBAAKhB,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACG,EAAD,CACIG,QAASkB,EAAQlB,QACjBL,QAAS,SAACG,GAAD,OAAK,EAAK2B,YAAY3B,QAGrC,sBAAKJ,UAAU,YAAf,UACE,8BAAMuB,IACN,6BAAKG,c,GA1EIlB,IAAMC,WAiFzB,SAASU,EAAgBb,GAWvB,IAVA,IAAM0B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA5B,EAAI,EAAGA,EAAI4B,EAAMd,OAAQd,IAAK,CAAC,IAAD,cACnB4B,EAAM5B,GADa,GAC9B6B,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAI7B,EAAQ2B,IAAM3B,EAAQ2B,KAAO3B,EAAQ4B,IAAM5B,EAAQ2B,KAAO3B,EAAQ6B,GACpE,OAAO7B,EAAQ2B,GAGnB,OAAO,KAMTG,IAASC,OACP,cAAC3B,EAAD,IACA4B,SAASC,eAAe,W","file":"static/js/main.5883d696.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n      return (\n        <button \n            className=\"square\" \n            onClick={ props.onClick} \n        >\n          {props.value}\n        </button>\n      );\n    \n  }\n  \n  class Board extends React.Component {\n\n\n\n    renderSquare(i) {\n      return (<Square \n                value={this.props.squares[i]} \n                onClick = { ()=> this.props.onClick(i)}\n            />)\n    }\n  \n    render(){\n  \n      return (\n        <div>\n          <div className=\"board-row\">\n            {this.renderSquare(0)}\n            {this.renderSquare(1)}\n            {this.renderSquare(2)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(3)}\n            {this.renderSquare(4)}\n            {this.renderSquare(5)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(6)}\n            {this.renderSquare(7)}\n            {this.renderSquare(8)}\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  class Game extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            history : [{\n                squares : Array(9).fill(null)\n            }],\n            stepNumber : 0,\n            xIsNext : true\n        };\n    }\n\n    handleClick(i){\n        const history = this.state.history.slice(0, this.state.stepNumber+1);\n        const current = history[history.length-1];\n        const squares = current.squares.slice();\n        if(calculateWinner(squares)|| squares[i]){\n            return;\n        }\n        squares[i] = this.state.xIsNext? 'X' : 'O';\n        this.setState({ \n            history : history.concat([{\n                squares:squares\n            }]),\n            stepNumber : history.length,\n            xIsNext : !this.state.xIsNext\n        })\n    }\n\n    jumpTo(step){\n        this.setState({\n            stepNumber : step,\n            xIsNext : ( step % 2)===0\n        });\n    }\n\n    render() {\n\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        const winner = calculateWinner(current.squares);\n\n        const moves = history.map((step, move)=>{\n            const desc = move?\n            'Go to move #' + move:\n            'Go to Game start';\n\n            return(\n                <li key={move}>\n                    <button onClick={()=> this.jumpTo(move)} >{desc}</button>\n                </li>\n            )\n        })\n\n\n        let status;\n        if(winner){\n            status = 'winner:' + winner;\n        } else{\n            status = 'Next Player:' + (this.state.xIsNext? 'X' : 'O');\n        }\n\n\n\n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board \n                squares={current.squares}\n                onClick={(i)=>this.handleClick(i)}\n            />\n          </div>\n          <div className=\"game-info\">\n            <div>{status}</div>\n            <ol>{moves}</ol>\n          </div>\n        </div>\n      );\n    }\n  }\n\n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }\n  \n  \n  // ========================================\n  \n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );\n  "],"sourceRoot":""}